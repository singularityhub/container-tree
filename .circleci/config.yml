version: 2.1

orbs:
  # https://circleci.com/orbs/registry/orb/circleci/docker-publish
  docker-publish: circleci/docker-publish@0.1.3

workflows:
  test:
    jobs:
      - test-python-3:
          filters:
            branches:
              ignore: docs/*
      - test-python-2:
          filters:
            branches:
              ignore: docs/*

  # This workflow will be run on all branches but master (to test)
  build_without_publishing_job:
    jobs:
      - docker-publish/publish:
          image: singularityhub/container-tree
          dockerfile: docker/Dockerfile
          deploy: false
          tag: latest
          filters:
            branches:
              ignore: 
                - master
                - docs*
          after_build:
            - run:
                name: Preview Docker Tag for Build
                command: |
                   for string in $(cat containertree/version.py | grep __version__)
                      do
                          DOCKER_TAG="${string//\"}"
                   done
                   echo "Version for Docker tag is ${DOCKER_TAG}"

  # This workflow will deploy images on merge to master only
  docker_with_lifecycle:
    jobs:
      - docker-publish/publish:
          image: singularityhub/container-tree
          dockerfile: docker/Dockerfile
          tag: latest
          filters:
            branches:
             only: master
          after_build:
            - run:
                name: Publish Docker Tag with ContainerTree Python Version
                command: |
                   for string in $(cat containertree/version.py | grep __version__)
                      do
                          DOCKER_TAG="${string//\"}"
                   done
                   echo "Version for Docker tag is ${DOCKER_TAG}"
                   docker tag singularityhub/container-tree:latest singularityhub/container-tree:${DOCKER_TAG}



install_containerdiff: &install_containerdiff
  name: Install container-diff
  command: |
        if [ ! -x "$(which container-diff)" ] ; then
            echo "Container diff not found on PATH! Downloading to /tmp"
            curl -LO https://storage.googleapis.com/container-diff/latest/container-diff-linux-amd64
            chmod +x container-diff-linux-amd64
            mv container-diff-linux-amd64 $HOME/conda/bin/container-diff
        fi
        export PATH=$HOME/conda/bin:$PATH
        echo "Container-Diff Installed"
        container-diff version

install: &install
  name: install containertree
  command: |
     $HOME/conda/bin/pip uninstall containertree --yes || echo "Not installed"
     $HOME/conda/bin/pip install .[all]


install_python_3: &install_python_3
  name: install Python 3.5 dependencies
  command: | 
      ls $HOME
      if [ ! -d "/home/circleci/conda" ]; then
          wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
          /bin/bash Miniconda3-latest-Linux-x86_64.sh -b -p $HOME/conda
          export PATH=$HOME/conda/bin:$PATH
          $HOME/conda/bin/conda install pandas
          $HOME/conda/bin/python setup.py install
       else
           echo "Miniconda 3 is already installed, continuing to build."
       fi

install_python_2: &install_python_2
  name: install Python 3.5 dependencies
  command: | 
      ls $HOME
      if [ ! -d "/home/circleci/conda" ]; then
          wget https://repo.anaconda.com/miniconda/Miniconda2-latest-Linux-x86_64.sh
          /bin/bash Miniconda2-latest-Linux-x86_64.sh -b -p $HOME/conda
          $HOME/conda/bin/conda install pandas
          export PATH=$HOME/conda/bin:$PATH
          $HOME/conda/bin/python setup.py install
       else
           echo "Miniconda 2 is already installed, continuing to build."
       fi

test_containertree: &test_containertree
  name: Test Containertree
  command: |
        export PATH=$HOME/conda/bin:$PATH
        python --version
        cd ~/repo/containertree/tests
        $HOME/conda/bin/python -m unittest test_utils
        $HOME/conda/bin/python -m unittest test_collection
        $HOME/conda/bin/python -m unittest test_container
        $HOME/conda/bin/python -m unittest test_packages
        /bin/bash test_client.sh

jobs:
  test-python-3:
    machine: true
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v2-dependencies
      - run: *install_python_3
      - run: *install_containerdiff
      - run: *install
      - save_cache:
          paths:
            - /home/circleci/conda
          key: v2-dependencies
      - run: *test_containertree

  test-python-2:
    machine: true
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - v2-dependencies
      - run: *install_python_2
      - run: *install_containerdiff
      - run: *install
      - save_cache:
          paths:
            - /home/circleci/conda
          key: v2-dependencies        
      - run: *test_containertree
